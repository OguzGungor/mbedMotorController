C51 COMPILER V9.60.0.0   LCD                                                               01/08/2021 03:06:56 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lcd.l
                    -st) TABS(2) OBJECT(.\Objects\lcd.obj)

line level    source

   1          #include <reg51.h>
   2          #include "lcd.h"
   3          
   4          
   5          sbit DB7 = P2^7;
   6          sbit DB6 = P2^6;
   7          sbit DB5 = P2^5;
   8          sbit DB4 = P2^4;
   9          sbit RS = P1^3;
  10          sbit E = P1^2;
  11          
  12          
  13          void clearDisplay(){
  14   1        /*returnHome();
  15   1        sendString("                ");   
  16   1        setDdRamAddress(0x40); // set address to start of second line 
  17   1        sendString("                ");   
  18   1        setDdRamAddress(0x00); // set address to start of second line 
  19   1        returnHome();*/
  20   1        sendString("   ");  
  21   1        returnHome();
  22   1        sendString(" ");
  23   1      
  24   1      }
  25          
  26          void disp(char *text){
  27   1        
  28   1        sendString(text);
  29   1        returnHome();
  30   1      
  31   1      }
  32          
  33          
  34          
  35          //void main(void) {
  36          void lcdDisplay(){
  37   1        functionSet();
  38   1        entryModeSet(1, 0); // increment and no shift
  39   1        displayOnOffControl(1, 0, 0); // display on, cursor on and blinking on
  40   1        
  41   1        /*sendString(text);
  42   1        setDdRamAddress(0x40); // set address to start of second line
  43   1        sendString(text);*/
  44   1      
  45   1        // The program can be controlled via some of the switches on port 2.
  46   1        // If switch 5 is closed the cursor returns home (address 0).
  47   1        // Otherwise, switches 6 and 7 are read - if both switches are open or both switches 
  48   1        //      are closed, the display does not shift.
  49   1        // If switch 7 is closed, continuously shift left.
  50   1        // If switch 6 is closed, continuously shift right.
  51   1        //while (1) {
  52   1          /*if (ret == 0) {
  53   1            returnHome();
  54   1          }
C51 COMPILER V9.60.0.0   LCD                                                               01/08/2021 03:06:56 PAGE 2   

  55   1          else {  
  56   1            if (left == 0 && right == 1) {
  57   1              cursorOrDisplayShift(1, 0); // shift display left
  58   1            }
  59   1            else if (left == 1 && right == 0) {
  60   1              cursorOrDisplayShift(1, 1); // shift display right
  61   1            } 
  62   1          } */
  63   1        //}
  64   1      }
  65          
  66          // LCD Module instructions -------------------------------------------
  67          // To understand why the pins are being set to the particular values in the functions
  68          // below, see the instruction set.
  69          // A full explanation of the LCD Module: HD44780.pdf
  70          
  71          void returnHome(void) {
  72   1        RS = 0;
  73   1        DB7 = 0;
  74   1        DB6 = 0;
  75   1        DB5 = 0;
  76   1        DB4 = 0;
  77   1        E = 1;
  78   1        E = 0;
  79   1        DB5 = 1;
  80   1        E = 1;
  81   1        E = 0;
  82   1        //delay();
  83   1      } 
  84          
  85          
  86          void entryModeSet(bit id, bit s) {
  87   1        RS = 0;
  88   1        DB7 = 0;
  89   1        DB6 = 0;
  90   1        DB5 = 0;
  91   1        DB4 = 0;
  92   1        E = 1;
  93   1        E = 0;
  94   1        DB6 = 1;
  95   1        DB5 = id;
  96   1        DB4 = s;
  97   1        E = 1;
  98   1        E = 0;
  99   1        //delay();
 100   1      }
 101          
 102          void displayOnOffControl(bit display, bit cursor, bit blinking) {
 103   1        DB7 = 0;
 104   1        DB6 = 0;
 105   1        DB5 = 0;
 106   1        DB4 = 0;
 107   1        E = 1;
 108   1        E = 0;
 109   1        DB7 = 1;
 110   1        DB6 = display;
 111   1        DB5 = cursor;
 112   1        DB4 = blinking;
 113   1        E = 1;
 114   1        E = 0;
 115   1        //delay();
 116   1      }
C51 COMPILER V9.60.0.0   LCD                                                               01/08/2021 03:06:56 PAGE 3   

 117          
 118          
 119          
 120          void functionSet(void) {
 121   1        DB7 = 0;
 122   1        DB6 = 0;
 123   1        DB5 = 1;
 124   1        DB4 = 0;
 125   1        RS = 0;
 126   1        E = 1;
 127   1        E = 0;
 128   1      }
 129          
 130          void functionSet2(void){
 131   1        E = 1;
 132   1        E = 0;
 133   1        DB7 = 1;
 134   1        E = 1;
 135   1        E = 0;
 136   1      
 137   1      }
 138          
 139          void setDdRamAddress(char address) {
 140   1        RS = 0;
 141   1        DB7 = 1;
 142   1        DB6 = getBit(address, 6);
 143   1        DB5 = getBit(address, 5);
 144   1        DB4 = getBit(address, 4);
 145   1        E = 1;
 146   1        E = 0;
 147   1        DB7 = getBit(address, 3);
 148   1        DB6 = getBit(address, 2);
 149   1        DB5 = getBit(address, 1);
 150   1        DB4 = getBit(address, 0);
 151   1        E = 1;
 152   1        E = 0;
 153   1        //delay();
 154   1      }
 155          
 156          // --------------------------------------------------------------------
 157          
 158          void sendChar(char c) {
 159   1        DB7 = getBit(c, 7);
 160   1        DB6 = getBit(c, 6);
 161   1        DB5 = getBit(c, 5);
 162   1        DB4 = getBit(c, 4);
 163   1        RS = 1;
 164   1        E = 1;
 165   1        E = 0;
 166   1        DB7 = getBit(c, 3);
 167   1        DB6 = getBit(c, 2);
 168   1        DB5 = getBit(c, 1);
 169   1        DB4 = getBit(c, 0);
 170   1        E = 1;
 171   1        E = 0;
 172   1        //delay();
 173   1      }
 174          
 175          void sendString(char* str) {
 176   1        int index = 0;
 177   1        while (str[index] != 0) {
 178   2          sendChar(str[index]);
C51 COMPILER V9.60.0.0   LCD                                                               01/08/2021 03:06:56 PAGE 4   

 179   2          index++;
 180   2        }
 181   1      }
 182          
 183          bit getBit(char c, char bitNumber) {
 184   1        return (c >> bitNumber) & 1;
 185   1      }
 186          /*
 187          void delay(void) { //LCD Delay
 188            char c;
 189            for (c = 0; c < 50; c++);
 190          }*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    375    ----
   CONSTANT SIZE    =      6    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       5
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
